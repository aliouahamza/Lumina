const express = require('express');
const cors = require('cors');
const bodyParser = require('body-parser');
const helmet = require('helmet');
const path = require('path');
const { RateLimiterMemory } = require('rate-limiter-flexible');

// ุงุณุชูุฑุงุฏ ุงููุณุงุฑุงุช
const authRoutes = require('./routes/auth');
const summaryRoutes = require('./routes/summary');
const translationRoutes = require('./routes/translation');
const userRoutes = require('./routes/user');

// ุฅูุดุงุก ุงูุชุทุจูู
const app = express();
const PORT = process.env.PORT || 5000;

// ุฅุนุฏุงุฏุงุช ุงูุฃูุงู
app.use(helmet({
  contentSecurityPolicy: {
    directives: {
      defaultSrc: ["'self'"],
      scriptSrc: ["'self'", "'unsafe-inline'"],
      styleSrc: ["'self'", "'unsafe-inline'", "https://cdnjs.cloudflare.com"],
      imgSrc: ["'self'", "data:", "https:"],
      connectSrc: ["'self'"]
    }
  }
}));

// ุฅุนุฏุงุฏุงุช CORS
app.use(cors({
  origin: process.env.NODE_ENV === 'production' ? 'https://yourdomain.com' : 'http://localhost:3000',
  credentials: true
}));

// ูุญุฏุฏ ุงููุนุฏู
const rateLimiter = new RateLimiterMemory({
  keyPrefix: 'middleware',
  points: 100, // ุนุฏุฏ ุงูุทูุจุงุช
  duration: 60, // ูู ุงูุซุงููุฉ
});

app.use(async (req, res, next) => {
  try {
    await rateLimiter.consume(req.ip);
    next();
  } catch (rejRes) {
    res.status(429).json({
      success: false,
      message: 'ุชู ุชุฌุงูุฒ ุงูุญุฏ ุงููุณููุญ ูู ุงูุทูุจุงุช. ุญุงูู ูุฑุฉ ุฃุฎุฑู ุจุนุฏ ุฏูููุฉ.'
    });
  }
});

// ุงููุชูุณุทุงุช
app.use(bodyParser.json({ limit: '10mb' }));
app.use(bodyParser.urlencoded({ extended: true, limit: '10mb' }));

// ุฎุฏูุฉ ุงููููุงุช ุงูุซุงุจุชุฉ
app.use(express.static(path.join(__dirname, 'client/build')));

// ุงููุณุงุฑุงุช
app.use('/api/auth', authRoutes);
app.use('/api/summary', summaryRoutes);
app.use('/api/translation', translationRoutes);
app.use('/api/user', userRoutes);

// ูุณุงุฑ ุงูุตุญุฉ
app.get('/api/health', (req, res) => {
  res.json({
    success: true,
    message: 'ุงูุฎุงุฏู ูุนูู ุจุดูู ุทุจูุนู',
    timestamp: new Date().toISOString()
  });
});

// ุงูุชุนุงูู ูุน React Router
app.get('*', (req, res) => {
  res.sendFile(path.join(__dirname, 'client/build', 'index.html'));
});

// ูุนุงูุฌ ุงูุฃุฎุทุงุก ุงูุนุงู
app.use((error, req, res, next) => {
  console.error('ุฎุทุฃ ูู ุงูุฎุงุฏู:', error);
  res.status(500).json({
    success: false,
    message: 'ุญุฏุซ ุฎุทุฃ ุฏุงุฎูู ูู ุงูุฎุงุฏู',
    error: process.env.NODE_ENV === 'development' ? error.message : undefined
  });
});

// ุจุฏุก ุชุดุบูู ุงูุฎุงุฏู
app.listen(PORT, () => {
  console.log(`๐ ุงูุฎุงุฏู ูุนูู ุนูู ุงููููุฐ ${PORT}`);
  console.log(`๐ ุงูุนููุงู ุงููุญูู: http://localhost:${PORT}`);
});

module.exports = app;